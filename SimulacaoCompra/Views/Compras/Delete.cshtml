@model SimulacaoCompra.Models.Compra
<link rel="stylesheet" href="https://code.getmdl.io/1.3.0/material.indigo-red.min.css" />
@{
    ViewData["Title"] = "Deletar";
}

<h2 class="text-center">Deletar Simulação</h2>

<h4 class="text-center">Deseja realmente fazer isto?</h4>
<hr class="mdl-color--deep-purple-A700" />

<div class="row">

    <div class="col-md-4"></div>
    <div class="campo col-md-4 mdl-shadow--8dp">
        <br />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.NomeDaCompra)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.NomeDaCompra)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Valortotal)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Valortotal)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Valorjuros)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Valorjuros)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.TipoCalculo)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.TipoCalculo)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Qtdparcelas)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Qtdparcelas)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Datacompra)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Datacompra)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Valorparcela)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Valorparcela)
            </dd>
        </dl>

        <hr />
        <div class="dl-horizontal text-center popover-title">

            <strong>Detalhes da parcela</strong>
        </div>
        <br />
        <br />
        <!--O laço de repetição "For" abaixo, retorna um contagem de valores existentes sobre um determinado parcelamento Com o quantitativo de vencimentos futuros-->
        <div class="dl-horizontal">
            @if (Model.TipoCalculo == "J.Simples")
            {
                @for (decimal Count = 1; Count <= Model.Qtdparcelas; Count++)
                {<dl>
                        @for (Model.Datacompra = Model.Datacompra.AddMonths(0); Count <= Model.Qtdparcelas; Count++)
                        {
                            Model.Datacompra = Model.Datacompra.AddMonths(1);
                            <dt>@Html.DisplayFor(model => model.Datacompra)</dt>
                            <dd>

                                @Html.DisplayFor(model => model.Valorparcela)

                            </dd>
                        }
                    </dl>
                }
                <dl>

                    <dt> </dt>
                    <dd>_________________</dd>

                    <dt>Valor Total: </dt>
                    <dd>@{Model.Valorparcela = Model.Valorparcela * Model.Qtdparcelas;} @Html.DisplayFor(model => model.Valorparcela)</dd>
                </dl>
            }

            @if (Model.TipoCalculo == "J.Composto")
            {

                @for (decimal Count = 1; Count <= Model.Qtdparcelas; Count++)
                {<dl>
                        @for (Model.Datacompra = Model.Datacompra.AddMonths(0); Count <= Model.Qtdparcelas; Count++)
                        {
                            Model.Datacompra = Model.Datacompra.AddMonths(1);
                            <dt>@Html.DisplayFor(model => model.Datacompra)</dt>
                            <dd>
                                @if (Count == Model.Qtdparcelas)
                                {
                                    double A1 = Convert.ToDouble(Model.Valorparcela);
                                    double A2 = 0.04;
                                    double X;

                                    X = A1 + A2;

                                    Model.Valorparcela = Convert.ToDecimal(X);

                                }

                                @Html.DisplayFor(model => model.Valorparcela)

                            </dd>

                        }




                    </dl>

                }
                <dl>

                    <dt> </dt>
                    <dd>_________________</dd>

                    <dt>Valor Total: </dt>
                    <dd>
                        @{
                            double Total;
                            double ValorP = Convert.ToDouble(Model.Valorparcela);
                            double QtdP = Convert.ToDouble(Model.Qtdparcelas);
                            double Residuo = 0.04;

                            Total = ValorP - Residuo;
                            Total = Total * QtdP;
                            Total = Total + Residuo;

                            Model.Valorparcela = Convert.ToDecimal(Total);


                            @Html.DisplayFor(model => model.Valorparcela);
                        }

                    </dd>
                </dl>
            }
        </div>

        <div class="form-group">
            <form asp-action="Delete">
                <a asp-action="Index" class="mdl-button mdl-js-button mdl-js-ripple-effect"><i class="glyphicon glyphicon-chevron-left"></i> Voltar para lista</a> |
                <input type="hidden" asp-for="Idcompra" />
                <input type="submit" value="Deletar" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-color--red-700 mdl-color-text--white" />

            </form>
        </div>

    </div>
</div>